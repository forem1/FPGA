
/*
GUANFU_WANG@126.COM
QQ:21578936
未经许可禁止任何商业用途
OV7725
*/
 #include"ov7670.h"



  
       

#if   CMOS_MD==0  
const  char change_reg[CHANGE_REG_NUM][n_NUM]=
{	

     /*以下为OV7670 QVGA RGB565参数  */
	{0x3a, 0x04}, 
        {0x67, 0xc0},
	{0x68, 0x80},
        
	{0x40, 0xd0}, 
	{0x12, 0x14}, //COM7 
	{0x32, 0x80}, 
	{0x17, 0x16}, 
	{0x18, 0x04}, 
	{0x19, 0x02}, 
	{0x1a, 0x7a},//0x7a, 
	{0x03, 0x05},//0x0a, 		
	{0x0c, 0x00}, 
	{0x3e, 0x00},// 
	{0x70, 0x00}, 
	{0x71, 0x01}, 
	{0x72, 0x11}, 
	{0x73, 0x00},// 
	{0xa2, 0x02}, 
	{0x11, 0x00}, 
         
	{0x7a, 0x20},
	{0x7b, 0x1c},
	{0x7c, 0x28},
	{0x7c, 0x28},
        
	{0x7d, 0x3c},//20
	{0x7e, 0x55},
	{0x7f, 0x68},
	{0x80, 0x76},
	{0x81, 0x80},
        
	{0x82, 0x88},
	{0x83, 0x8f},
	{0x84, 0x96},
	{0x85, 0xa3},
	{0x86, 0xaf},
        
	{0x87, 0xc4},//30
	{0x88, 0xd7},
	{0x89, 0xe8},
          /*     
        {0x7a,  0x2C}, 
        {0x7b,  0x11}, 
        {0x7c,  0x1a}, 
        {0x7d,  0x2a}, 
        {0x7e,  0x42}, 
        {0x7f,  0x4c}, 
        {0x80,  0x56}, 
        {0x81,  0x5f}, 
        {0x82,  0x67}, 
        {0x83,  0x70}, 
        {0x84,  0x78}, 
        {0x85,  0x87}, 
        {0x86,  0x95}, 
        {0x87,  0xaf}, 
        {0x88,  0xc8}, 
        {0x89,  0xdf}, */
        //////////////
       /* 
       {0x7a, 0x4e},
        {0x7b, 0x03},
        {0x7c, 0x07},
        {0x7d, 0x0c},
        {0x7e, 0x15},
        {0x7f, 0x1a},
        {0x80, 0x21},
        {0x81, 0x26},
        {0x82, 0x2e},
        {0x83, 0x33},
        {0x84, 0x38},
        {0x85, 0x47},
        {0x86, 0x54},
        {0x87, 0x72},
        {0x88, 0x9c},
        {0x89, 0xc5},
     */
        ////////////////
	{0x13, 0xe0},
	{0x09, 0x00},//
        
	{0x10, 0x00},
	{0x0d, 0x00},
	{0x14, 0x20},//0x38, limit the max gain
	{0xa5, 0x05},
	{0xab, 0x07},
        
	{0x24, 0x8a},//40
	{0x25, 0x73},
	{0x26, 0xA5},
	{0x9f, 0x78},
	{0xa0, 0x68},
        
	{0xa1, 0x03},//0x0b,
	{0xa6, 0xdf},//0xd8,
	{0xa7, 0xdf},//0xd8,
	{0xa8, 0xf0},
	{0xa9, 0x90},
        
	{0xaa, 0x94},//50
	{0x13, 0xe5},
	{0x0e, 0x61},
	{0x0f, 0x4b},
	{0x16, 0x02},
        
	{0x1e, 0x27},//0x07,
	{0x21, 0x02},
	{0x22, 0x91},
	{0x29, 0x07},
	{0x33, 0x0b},
        
	{0x35, 0x0b},//60
	{0x37, 0x1d},
	{0x38, 0x71},
	{0x39, 0x2a},
	{0x3c, 0x78},
        
	{0x4d, 0x40},
	{0x4e, 0x20},
	{0x69, 0x5d},
	{0x6b, 0x40},//PLL
	{0x74, 0x19},
	{0x8d, 0x4f},
        
	{0x8e, 0x00},//70
	{0x8f, 0x00},
	{0x90, 0x00},
	{0x91, 0x00},
	{0x92, 0x00},//0x19,//0x66
        
	{0x96, 0x00},
	{0x9a, 0x80},
	{0xb0, 0x84},
	{0xb1, 0x0c},
	{0xb2, 0x0e},
        
	{0xb3, 0x82},//80
	{0xb8, 0x0a},
	{0x43, 0x14},
	{0x44, 0xf0},
	{0x45, 0x34},
        
	{0x46, 0x58},
	{0x47, 0x28},
	{0x48, 0x3a},
	{0x59, 0x88},
	{0x5a, 0x88},
        
	{0x5b, 0x44},//90
	{0x5c, 0x67},
	{0x5d, 0x49},
	{0x5e, 0x0e},
	{0x64, 0x04},
	{0x65, 0x20},
        
	{0x66, 0x05},
	{0x94, 0x04},
	{0x95, 0x08},
	{0x6c, 0x0a},
	{0x6d, 0x55},
        
        /*
	{0x4f, 0x80},
	{0x50, 0x80},
	{0x51, 0x00},
	{0x52, 0x22},
	{0x53, 0x5e},
	{0x54, 0x80},
        */
         
	{0x4f, 0x99},
	{0x50, 0x99},
	{0x51, 0x00},
	{0x52, 0x28},
	{0x53, 0x70},
	{0x54, 0x99},
        {0x58, 0x9e},  
      /* 
        {0x4f, 0xc0},    
	{0x50, 0xc0},   
	{0x51, 0x00}, 
	{0x52, 0x33}, 
	{0x53, 0x8d},  
	{0x54, 0xc0},   
	{0x58, 0x9e}, 
        */ 
        {0x76, 0xe1},
        {0x11, 0x00}, 
        {0x6b, 0x40},//PLL
	{0x6e, 0x11},//100
	{0x6f, 0x9f},//0x9e for advance AWB
        {0x55, 0x00},//亮度
        {0x56, 0x4a},//对比度
        {0x57, 0x80},//0x40,      
	
};
#elif CMOS_MD==1
const  char change_reg[CHANGE_REG_NUM][n_NUM]=
{	  
  {0x32,0x00},
  {0x2a,0x00},
  {0x11,0x00},
  {0x12,0x06},//QVGA ,RGB565 0x46//raw rgb 0x51//GBR422 0X52

  {0x42,0x7f},
  {0x4d,0x50},//0x09
  {0x63,0xf0},
  {0x64,0xff},
  {0x65,0x0f},
  {0x66,0x00},
  {0x67,0x00},
  {0x69,0x00}, 
 
  {0x15,0x00},
  {0x0d,0x01},//PLL
  {0x0f,0x00},
  {0x14,0x01},

  {0x24,0x75},
  {0x25,0x63},
  {0x26,0xa5},
  {0x2b,0xff},
  {0x6b,0xaa},
  
  {0x8e,0x00},
  {0x8f,0x00},
  {0x90,0x08},//
  {0x91,0x10},//
  {0x92,0x00},//
  {0x93,0x00},
  
  {0x94,0x2c},
  {0x95,0x24},
  {0x96,0x08},
  {0x97,0x14},
  {0x98,0x24},
  {0x99,0x38},
  {0x9a,0x9e},
  

  
  {0x9e,0x81},
  {0xa6,0x06},

  {0x7e,0x0c},
  {0x7f,0x16},
  {0x80,0x2a},
  {0x81,0x4e},
  {0x82,0x61},
  {0x83,0x6f},
  {0x84,0x7b},
  {0x85,0x86},
  {0x86,0x8e},
  {0x87,0x97},
  {0x88,0xa4},
  {0x89,0xaf},
  {0x8a,0xc5},
  {0x8b,0xd7},
  {0x8c,0xe8},
  {0x8d,0x20},

  {0x33,0x66},
  {0x34,0x00},//7f
  //{0x23,0x01},
  {0x22,0x99},
  {0x23,0x03},
  
  {0x49,0x20},
  {0x4a,0x10},
  {0x4b,0x14},
  {0x4c,0x17},
  {0x46,0x01},
  
  {0x47,0x5},
  {0x48,0x5},
  
  {0x0e,0x65},
  {0x0c,0x50},
  {0x09,0x03},
 

 
  {0x29,0x50},
  {0x2C,0x78},
//  {0x00,0x60},

  {0x9b,0x00},// 亮度
  {0xab,0x06},//  
  
  {0x9c,0x20},//set contrast //对比
  {0xa7,0x40},//set saturation  
  {0xa8,0x40},//set saturation 
  {0xa9,0x80},//set hue 
  {0xaa,0x80},//set hue 
  //auto
  {0x13,0xcF},
  {0x2D,0x00},
  {0x2E,0x00},
  
  {0x60,0x80},
  {0x61,0x80}, 
  {0x03,0xb0}, 
  {0xac,0xdf},
  


};

 #elif CMOS_MD==2
 const  int change_reg[CHANGE_REG_NUM][n_NUM]=
{	
    	//{ 0xf0,0x0000 }, //Sensor address page 0  
	{0, 0x0d,0x0009 },   
	{0, 0x0d,0x0029 },   
	{0, 0x0d,0x0008 },   
	{255, 0,10 }, //
	{1, 0x9d,0x3ca0 },   
	{2, 0xf0,0x0002 }, //Sensor address page 2  
	{2, 0x24,0x5f20 },   
	{2, 0x28,0xef02 },   
	{2, 0x5f,0x4143 },   
	{2, 0x02,0x00ee },   
	{2,0x03,0x291a },   
	{2,0x04,0x02a4 },   
	{2, 0x09,0x0068 },   
	{2, 0x0a,0x002a },   
	{2, 0x0b,0x0004 },   
	{2, 0x0c,0x0093 },   
	{2, 0x0d,0x0082 },   
	{2, 0x0e,0x0040 },   
	{2, 0x0f,0x005f },   
	{2, 0x10,0x004e },   
	{2, 0x11,0x005b },   
	{2, 0x15,0x00c9 },   
	{2, 0x16,0x005e },   
	{2, 0x17,0x009d },   
	{2, 0x18,0x0006 },   
	{2, 0x19,0x0089 },   
	{2, 0x1a,0x0012 },   
	{2, 0x1b,0x00a1 },   
	{2, 0x1c,0x00e4 },   
	{2, 0x1d,0x007a },   
	{2, 0x1e,0x0064 },   
	{2, 0xf6,0x005f },   
	{2, 0xf0,0x0001 },   
	{2, 0x81,0x0000 },   
	{2, 0x82,0x0000 },   
	{2, 0x83,0x0000 },   
	{2, 0x84,0x0000 },   
	{2, 0x85,0x0000 },   
	{2, 0x86,0x0000 },   
	{2, 0x87,0x0000 },   
	{2, 0x88,0x0000 },   
	{2, 0x89,0x0000 },   
	{2, 0x8a,0x0000 },   
	{2, 0x8b,0x0000 },   
	{2, 0x8c,0x0000 },   
	{2, 0x8d,0x0000 },   
	{2, 0x8e,0x0000 },   
	{2, 0x8f,0x0000 },   
	{2, 0x90,0x0000 },   
	{2, 0x91,0x0000 },   
	{2, 0x92,0x0000 },   
	{2, 0x93,0x0000 },   
	{2, 0x94,0x0000 },   
	{2, 0x95,0x0000 },   
	{2, 0xb6,0x0000 },   
	{2, 0xb7,0x0000 },   
	{2, 0xb8,0x0000 },   
	{2, 0xb9,0x0000 },   
	{2, 0xba,0x0000 },   
	{2, 0xbb,0x0000 },   
	{2, 0xbc,0x0000 },   
	{2, 0xbd,0x0000 },   
	{2, 0xbe,0x0000 },   
	{2, 0xbf,0x0000 },   
	{2, 0xc0,0x0000 },   
	{2, 0xc1,0x0000 },   
	{2, 0xc2,0x0000 },   
	{2, 0xc3,0x0000 },   
	{2, 0xc4,0x0000 }, 
        
        {2, 0x67,0x0005 }, 
        //{1, 0x06,0x0005 },   /// 
        //0xffff,0x0006, 
	//{ 0xf0,0x0001 },  //Sensor address page 1

	{1, 0x53,0x1c12 },   
	{1, 0x54,0x402a },   
	{1, 0x55,0x7c62 },   
	{1, 0x56,0xa994 },   
	{1, 0x57,0xcfbc },   
	{1, 0x58,0xe000 },   
	{1, 0xdc,0x1c12 },   
	{1, 0xdd,0x402a },   
	{1, 0xde,0x7c62 },   
	{1, 0xdf,0xa994 },   
	{1, 0xe0,0xcfbc },   
	{1, 0xe1,0xe000 },   
	{1, 0x34,0x0010 },   
	{1, 0x35,0xf010 },   
	//{ 0xf0,0x0000 },  //Sensor address page 0 
      //  {0, 0x03 , 550 },
       // {0, 0x04 , 550 },
      //  {0, 0x01 , 350 },
      //  {0, 0x02 , 350 },
	{0, 0x05,0x00f1 },   
	{0, 0x06,0x0005 },   ///
	{0, 0x07,0x00d9 },   
	{0, 0x08,0x000d },  
        {0, 0x0a,0x0111 }, 
        
	{0, 0x20,0x0100 },   
	{0, 0x21,0x0400 },   
	{0, 0x22,0x0d2b },   
	{0, 0x24,0x8000 },   
	{0, 0x59,0x0018 },   
	//{ 0xffff,0x0003, 
        {0, 0x33 , 0x0400 },
        {0, 0x34 , 0xc019 }, 
        {0, 0x3f , 0x2020 },
        {0, 0x40 , 0x2020 },      
        {0, 0x5a , 0xc00a },
        {0, 0x70 , 0x7b0a },
        {0, 0x71 , 0xff00 },
        {0, 0x72 , 0x190e },
        {0, 0x73 , 0x180f },
        {0, 0x74 , 0x5732 },
        {0, 0x75 , 0x5634 },
        {0, 0x76 , 0x7335 },
        {0, 0x77 , 0x3012 },
        {0, 0x78 , 0x7902 },
        {0, 0x79 , 0x7506 },
        {0, 0x7a , 0x770a },
        {0, 0x7b , 0x7809 },
        {0, 0x7c , 0x7d06 },
        {0, 0x7d , 0x3110 },
        {0, 0x7e , 0x007e },
        {0, 0x80 , 0x5904 },
        {0, 0x81 , 0x5904 },
        {0, 0x82 , 0x570a },
        {0, 0x83 , 0x580b },
        {0, 0x84 , 0x470c },
        {0, 0x85 , 0x480e },
        {0, 0x86 , 0x5b02 },
        {0, 0x87 , 0x005c },
	//{ 0xf0,0x0002 }, //Sensor address page 2   
	{2, 0x39,0x06c2 },   
	{2, 0x3a,0x05f9 },   
	{2, 0x3b,0x0410 },   
	{2, 0x3c,0x049d },   
	{2, 0x57,0x0104 },   
	{2, 0x58,0x0138 },   
	{2, 0x59,0x0126 },   
	{2, 0x5a,0x0161 },   
	{2, 0x5c,0x120d },   
	//{ 0xf0,0x0001 },   //Sensor address page 1
        {1, 0x3a , 0x0300 },//RG565
        {1, 0x9b , 0x0300 },
        ////////////////////////
        {1, 159, 0  },//19f-
        {1, 160, 1280  }, //1a0 
        {1, 161, 320  },//1a1   
        {1, 162, 0  }, //1a2   
        {1, 163, 960 }, //1a3    
        {1, 164, 240   },//1a4  
        
        {1, 165, 0   },//1a5-
        {1, 166, 1280   },//1a6
        {1, 167, 320   },//1a7
        {1, 168, 0   },//1a8
        {1, 169, 960  }, //1a9
        {1, 170, 240  },//1aa
       
        {1, 0xae, 0x0c09  },//1aa
   //     {1, 0x35, 0xf0f0  },//
     //   {1, 0x34, 0x0080  },//  
        {0, 0xc8, 0x0000  },// 
        ////////////////////////
       /*  
         ////////////////
        {1,0xa6, 1280},  
        {1,0xa9, 960},  
        {1,0xa1, 320},  
        {1,0xa7, 320},  
        {1,0xaa, 240},  
        {1,0xa4, 240},
        */
        //////////////////////
	//{ 0xffff,0x0003, 
	//{1, 0xf0,0x0002 },//Sensor address page 2 
	{2, 0xd2,0x007f },   
	{2, 0x5b,0x0000 },   
	{2, 0xcc,0x0004 },   
	{2, 0xcb,0x0001 },   
	{0, 0xf0,0x0000 },//Sensor address page 0
};        
#elif CMOS_MD==3
const  int change_reg[CHANGE_REG_NUM][n_NUM]=
{ 
          
          {0, 0x33, 0x0343        }, // RESERVED_CORE_33
          {1, 0xC6, 0xA115        }, //SEQ_LLMODE
          {1, 0xC8, 0x0020        }, //SEQ_LLMODE
          {0, 0x38, 0x0866        }, // RESERVED_CORE_38
          {255, 0x00, 50 }, // Delay =500ms
  
          {2, 0x80, 0x0168        }, // LENS_CORRECTION_CONTROL
          {2, 0x81, 0x6432        }, // ZONE_BOUNDS_X1_X2
          {2, 0x82, 0x3296        }, // ZONE_BOUNDS_X0_X3
          {2, 0x83, 0x9664        }, // ZONE_BOUNDS_X4_X5
          {2, 0x84, 0x5028        }, // ZONE_BOUNDS_Y1_Y2
          {2, 0x85, 0x2878        }, // ZONE_BOUNDS_Y0_Y3
          {2, 0x86, 0x7850        }, // ZONE_BOUNDS_Y4_Y5
          {2, 0x87, 0x0000        }, // CENTER_OFFSET
          {2, 0x88, 0x0152        }, // FX_RED
          {2, 0x89, 0x015C        }, // FX_GREEN
          {2, 0x8A, 0x00F4        }, // FX_BLUE
          {2, 0x8B, 0x0108        }, // FY_RED
          {2, 0x8C, 0x00FA        }, // FY_GREEN
          {2, 0x8D, 0x00CF        }, // FY_BLUE
          {2, 0x8E, 0x09AD        }, // DF_DX_RED
          {2, 0x8F, 0x091E        }, // DF_DX_GREEN
          {2, 0x90, 0x0B3F        }, // DF_DX_BLUE
          {2, 0x91, 0x0C85        }, // DF_DY_RED
          {2, 0x92, 0x0CFF        }, // DF_DY_GREEN
          {2, 0x93, 0x0D86        }, // DF_DY_BLUE
          {2, 0x94, 0x163A        }, // SECOND_DERIV_ZONE_0_RED
          {2, 0x95, 0x0E47        }, // SECOND_DERIV_ZONE_0_GREEN
          {2, 0x96, 0x103C        }, // SECOND_DERIV_ZONE_0_BLUE
          {2, 0x97, 0x1D35        }, // SECOND_DERIV_ZONE_1_RED
          {2, 0x98, 0x173E        }, // SECOND_DERIV_ZONE_1_GREEN
          {2, 0x99, 0x1119        }, // SECOND_DERIV_ZONE_1_BLUE
          {2, 0x9A, 0x1663        }, // SECOND_DERIV_ZONE_2_RED
          {2, 0x9B, 0x1569        }, // SECOND_DERIV_ZONE_2_GREEN
          {2, 0x9C, 0x104C        }, // SECOND_DERIV_ZONE_2_BLUE
          {2, 0x9D, 0x1015        }, // SECOND_DERIV_ZONE_3_RED
          {2, 0x9E, 0x1010        }, // SECOND_DERIV_ZONE_3_GREEN
          {2, 0x9F, 0x0B0A        }, // SECOND_DERIV_ZONE_3_BLUE
          {2, 0xA0, 0x0D53        }, // SECOND_DERIV_ZONE_4_RED
          {2, 0xA1, 0x0D51        }, // SECOND_DERIV_ZONE_4_GREEN
          {2, 0xA2, 0x0A44        }, // SECOND_DERIV_ZONE_4_BLUE
          {2, 0xA3, 0x1545        }, // SECOND_DERIV_ZONE_5_RED
          {2, 0xA4, 0x1643        }, // SECOND_DERIV_ZONE_5_GREEN
          {2, 0xA5, 0x1231        }, // SECOND_DERIV_ZONE_5_BLUE
          {2, 0xA6, 0x0047        }, // SECOND_DERIV_ZONE_6_RED
          {2, 0xA7, 0x035C        }, // SECOND_DERIV_ZONE_6_GREEN
          {2, 0xA8, 0xFE30        }, // SECOND_DERIV_ZONE_6_BLUE
          {2, 0xA9, 0x4625        }, // SECOND_DERIV_ZONE_7_RED
          {2, 0xAA, 0x47F3        }, // SECOND_DERIV_ZONE_7_GREEN
          {2, 0xAB, 0x5859        }, // SECOND_DERIV_ZONE_7_BLUE
          {2, 0xAC, 0x0000        }, // X2_FACTORS
          {2, 0xAD, 0x0000        }, // GLOBAL_OFFSET_FXY_FUNCTION
          {2, 0xAE, 0x0000        }, // K_FACTOR_IN_K_FX_FY
          {1, 0x08, 0x01FC        }, // COLOR_PIPELINE_CONTROL
          {255, 0x00, 20 }, // Delay =100ms
          {1, 0xBE, 0x0004        }, // YUV_YCBCR_CONTROL
          {0, 0x65, 0xA000        }, // CLOCK_ENABLING
          {255, 0x00, 20 }, // Delay =100ms

          {1, 0xC6, 0xA102        }, //SEQ_MODE
          {1, 0xC8, 0x001F        }, //SEQ_MODE
          {1, 0x08, 0x01FC        }, // COLOR_PIPELINE_CONTROL
          {1, 0x08, 0x01EC        }, // COLOR_PIPELINE_CONTROL
          {1, 0x08, 0x01FC        }, // COLOR_PIPELINE_CONTROL
          {1, 0x36, 0x0F08         }, // APERTURE_PARAMETERS
          {1, 0xC6, 0x270B        }, //MODE_CONFIG
          {1, 0xC8, 0x0030        }, //MODE_CONFIG, JPEG disabled for A and B
          {1, 0xC6, 0xA121        }, //SEQ_CAP_MODE
          {1, 0xC8, 0x007f        }, //SEQ_CAP_MODE (127 frames before switching to Preview)
          {0, 0x05, 0x011E        }, // HORZ_BLANK_B
          {0, 0x06, 0x006F        }, // VERT_BLANK_B
          {0, 0x07, 0xFE          }, // HORZ_BLANK_A
          {0, 0x08, 19            }, // VERT_BLANK_A
          {0, 0x20, 0x0300        }, // READ_MODE_B (Image flip settings)
          {0, 0x21, 0x8400        }, // READ_MODE_A (1ADC)



         {1, 0xC6, 0x2717        }, //MODE_SENSOR_X_DELAY_A
         {1, 0xC8, 792           }, //MODE_SENSOR_X_DELAY_A
         {1, 0xC6, 0x270F        }, //MODE_SENSOR_ROW_START_A
         {1, 0xC8, 0x001C        }, //MODE_SENSOR_ROW_START_A
         {1, 0xC6, 0x2711        }, //MODE_SENSOR_COL_START_A
         {1, 0xC8, 0x003C        }, //MODE_SENSOR_COL_START_A
         {1, 0xC6, 0x2713        }, //MODE_SENSOR_ROW_HEIGHT_A
         {1, 0xC8, 0x04B0        }, //MODE_SENSOR_ROW_HEIGHT_A
         {1, 0xC6, 0x2715        }, //MODE_SENSOR_COL_WIDTH_A
         {1, 0xC8, 0x0640        }, //MODE_SENSOR_COL_WIDTH_A
         {1, 0xC6, 0x2719        }, //MODE_SENSOR_ROW_SPEED_A
         {1, 0xC8, 0x0011        }, //MODE_SENSOR_ROW_SPEED_A
         
         {1, 0xC6, 0x2707        }, //MODE_OUTPUT_WIDTH_B
         {1, 0xC8, 0x0640        }, //MODE_OUTPUT_WIDTH_B
         {1, 0xC6, 0x2709        }, //MODE_OUTPUT_HEIGHT_B
         {1, 0xC8, 0x04B0        }, //MODE_OUTPUT_HEIGHT_B
         {1, 0xC6, 0x271B        }, //MODE_SENSOR_ROW_START_B
         {1, 0xC8, 0x001C        }, //MODE_SENSOR_ROW_START_B
         {1, 0xC6, 0x271D        }, //MODE_SENSOR_COL_START_B
         {1, 0xC8, 0x003C        }, //MODE_SENSOR_COL_START_B
         {1, 0xC6, 0x271F        }, //MODE_SENSOR_ROW_HEIGHT_B
         {1, 0xC8, 0x04B0        }, //MODE_SENSOR_ROW_HEIGHT_B
         {1, 0xC6, 0x2721        }, //MODE_SENSOR_COL_WIDTH_B
         {1, 0xC8, 0x0640        }, //MODE_SENSOR_COL_WIDTH_B
         {1, 0xC6, 0x2723        }, //MODE_SENSOR_X_DELAY_B
         {1, 0xC8, 0x0716        }, //MODE_SENSOR_X_DELAY_B
         {1, 0xC6, 0x2725        }, //MODE_SENSOR_ROW_SPEED_B
         {1, 0xC8, 0x0011        }, //MODE_SENSOR_ROW_SPEED_B


//         //Maximum Slew-Rate on IO-Pads (for Mode A)
         {1, 0xC6, 0x276B        }, //MODE_FIFO_CONF0_A
         {1, 0xC8, 0x0027        }, //MODE_FIFO_CONF0_A
         {1, 0xC6, 0x276D        }, //MODE_FIFO_CONF1_A
         {1, 0xC8, 0xE1E1        }, //MODE_FIFO_CONF1_A
         {1, 0xC6, 0xA76F        }, //MODE_FIFO_CONF2_A
         {1, 0xC8, 0x00E1        }, //MODE_FIFO_CONF2_A

         //Maximum Slew-Rate on IO-Pads (for Mode B)
         {1, 0xC6, 0x2772        }, //MODE_FIFO_CONF0_B
         {1, 0xC8, 0x0027        }, //MODE_FIFO_CONF0_B
         {1, 0xC6, 0x2774        }, //MODE_FIFO_CONF1_B
         {1, 0xC8, 0xE1E1        }, //MODE_FIFO_CONF1_B
        {1, 0xC6, 0xA776        }, //MODE_FIFO_CONF2_B
        {1, 0xC8, 0x00E1        }, //MODE_FIFO_CONF2_B
         
         //Set maximum integration time to get a minimum of 15 fps at 45MHz
         {1, 0xC6, 0xA20E        }, //AE_MAX_INDEX
         {1, 0xC8, 0x0004        }, //AE_MAX_INDEX
         //Set minimum integration time to get a maximum of 15 fps at 45MHz
         {1, 0xC6, 0xA20D        }, //AE_MAX_INDEX
         {1, 0xC8, 0x0004        }, //AE_MAX_INDEX
         // Configue all GPIO for output and set low to save power
         {1, 0xC6, 0x9078        },
         {1, 0xC8, 0x0000        },
         {1, 0xC6, 0x9079        },
         {1, 0xC8, 0x0000        },
         {1, 0xC6, 0x9070        },
         {1, 0xC8, 0x0000        },
         {1, 0xC6, 0x9071        },
         {1, 0xC8, 0x0000        },
         // gamma and contrast
         {1, 0xC6, 0xA743        }, // MODE_GAM_CONT_A
         {1, 0xC8, 0x0003        }, // MODE_GAM_CONT_A
         {1, 0xC6, 0xA744        }, // MODE_GAM_CONT_B
         {1, 0xC8, 0x0003        }, // MODE_GAM_CONT_B
         {255, 0x00, 50 }, // Delay =500m



 //      Set PLL
 //      Mclk = 16MHz , Pclk = 40MHz
     /*  
         {0, 0xF2, 0x0000        },      
         {0, 0x65, 0xE000        },      
         {0, 0x66, 0x1906        },      // PLL_REG
         {0, 0x67, 0x0500        },      // PLL2_REG
         {0, 0x65, 0xA000        },      // CLOCK_ENABLING
         {256, 0x00, 10          }, // Delay =500ms
         {0, 0x65, 0x2000        },      // CLOCK_ENABLING
         {256, 0x00, 10          }, // Delay =500ms
     */    
         {1, 0xC6, 0x2703    }, //MODE_OUTPUT_WIDTH_A
         {1, 0xC8, 320   }, //MODE_OUTPUT_WIDTH_A
         {1, 0xC6, 0x2705    }, //MODE_OUTPUT_HEIGHT_A
         {1, 0xC8, 240    }, //MODE_OUTPUT_HEIGHT_A
         {1, 0xC6, 0x2707    }, //MODE_OUTPUT_WIDTH_B
         {1, 0xC8, 320    }, //MODE_OUTPUT_WIDTH_B
         {1, 0xC6, 0x2709    }, //MODE_OUTPUT_HEIGHT_B
         {1, 0xC8, 240    }, //MODE_OUTPUT_HEIGHT_B
         {1, 0xC6, 0x2779    }, //Spoof Frame Width
         {1, 0xC8, 320    }, //Spoof Frame Width
         {1, 0xC6, 0x277B    }, //Spoof Frame Height
         {1, 0xC8, 240    }, //Spoof Frame Height
         {255, 0x00, 10 }, // Delay =100ms 
         {1, 0xC6, 0xA103    }, //SEQ_CMD
         {1, 0xC8, 0x0005    }, //SEQ_CMD
         {255, 0x00, 50 }, // Delay =500ms 
         
         {1, 0x97, 0x0020        },
         {1, 0x98, 0x0000        },
         //////////////////////////////////
           {1, 0xC6, 0x2703    }, //MODE_OUTPUT_WIDTH_A
         {1, 0xC8, 320   }, //MODE_OUTPUT_WIDTH_A
         {1, 0xC6, 0x2705    }, //MODE_OUTPUT_HEIGHT_A
         {1, 0xC8, 240    }, //MODE_OUTPUT_HEIGHT_A
         {1, 0xC6, 0x2707    }, //MODE_OUTPUT_WIDTH_B
         {1, 0xC8, 320    }, //MODE_OUTPUT_WIDTH_B
         {1, 0xC6, 0x2709    }, //MODE_OUTPUT_HEIGHT_B
         {1, 0xC8, 240    }, //MODE_OUTPUT_HEIGHT_B
         {1, 0xC6, 0x2779    }, //Spoof Frame Width
         {1, 0xC8, 320    }, //Spoof Frame Width
         {1, 0xC6, 0x277B    }, //Spoof Frame Height
         {1, 0xC8, 240    }, //Spoof Frame Height
         {255, 0x00, 10 }, // Delay =100ms 
         {1, 0xC6, 0xA103    }, //SEQ_CMD
         {1, 0xC8, 0x0005    }, //SEQ_CMD
         {255, 0x00, 50 }, // Delay =500ms 
         
         {1, 0x97, 0x0020        },
         {1, 0x98, 0x0000        },

};  

#elif CMOS_MD==4
const   int change_reg[CHANGE_REG_NUM][n_NUM]=
{
///////mt9v111 qvga rgb565 guanfu_wang///////////////////////
       {0x01, 0x0001},     /* select IFP address space */ 
        
       {0x05, 0x000b},  //  
       {0x06, 0x500c},  
       {0x25, 0x4912},     
       {0x62, 0x0000},   
       {0x08, 0xd800},         //rgb    
       {0x21, 0x5000},//0x21,
       {0xA7, 320    },//
       {0xAA, 240    },//
       {0x3a, 0x0000 },//
       
       {0x62, 0x0000 },// 
       {0x67, 0x4010 },//
       
       {0x34, 0x0000 },//
       {0x35, 0xff00 },//
        { 0x37, 0x0080 },//
        {0x2e, 0x1055 },//
      { 51, 5137 }, 
       { 57, 290  }, 
       { 59, 1068 },
       { 62, 4095 }, 
       { 89, 504  }, 
       { 90, 605  },
       { 92, 8222 }, 
       { 93, 10021}, 
       {100, 4477 },  /*  */
       {0x01, 0x0004},     /* select sensor address space */ 
       //{0x20, 0xffff},
       { 51, 132 }, 
       { 6, 10 }, 
       {0x16, 0x0000}, 
       {0x17, 0x0000}, 
       {0x18, 0x0000}, 
       {0x19, 0x0000}, 
       {0x1a, 0x0000}, 
       {0x1b, 0x0000}, 
       {0x1c, 0x0000}, 
       {0x1d, 0x0000}, 
       {0x30, 0x0000}, 
       {0x30, 0x0005}, 
       {0x31, 0x0000}, 
 
       {0x2b, 0x00a0},    
       {0x2c, 0x0020},     

       {0x2d, 0x0020},     
       {0x2e, 0x00a0},     
       {0x2f,  63414},//
       
       {0x07, 0x3002},//
       {0x09, 280   },//
       {0x21, 0xe401},
       {0x2f, 0xe7b6},/**/

};
#elif CMOS_MD==5
const   int change_reg[CHANGE_REG_NUM][n_NUM]=
{
///////mt9m112 qvga rgb565 guanfu_wang///////////////////////

/*
     {0, 0x35, 0x0022 },
     {0, 0x0c, 0x0000 },
     {0, 0x21, 0x8400 },
     {0, 0x05, 0x022e },
     {1, 0x06, 0x708e },
     {1, 0x05, 0x000e },
     {2, 0xCB, 0x0001 },
     {2, 0xCC, 0x0004 },
     {2, 0xD2, 0x0000 },
     {2, 0x5B, 0x0001 },
     {1, 0x53, 0x0602},  
     {1,  0x54,0x4416}, 
     {1,  0x55,0xb68a}, 
     {1,  0x56,0xe0cf}, 
     {1,  0x57,0xf7e0}, 
     {1,  0x58,0xff00},  
     {2,  0x9d,0x3C45},
     {2,  0x06,0x700E},*/
     //   {2,0x37, 0x5810}, 
       {0,0X24 , 0x8000 },
       {0,0X66 , 0x1802 },
       {0,0x67 , 0x0501  },
       {255, 0,20  },
     ///  {0,0x65 ,0x4000  },
       {255, 0,120  },
     //  {0, 0x65,0x8000  },
        
        {1,0x3a, 0x0300},  
       {1,0xa6, 1280},  
       {1,0xa9, 960},  
       {1,0xa1, 320},  
       {1,0xa7, 320},  
       {1,0xaa, 240},  
       {1,0xa4, 240},  
       {1,0xae, 0x0C08},
       

};
  #endif        
  




